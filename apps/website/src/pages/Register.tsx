import React, { Component } from 'react'
import { Route, Link } from 'react-router-dom'
import '../App.css'
import './styles/Register.css'

import { AppContext } from '../AppContext'
import { handleChangeById as inputHandler, emailValidation } from '../libs/util/inputHandler'
import Firestore from '../libs/util/database'
import { APIService } from '../libs/api/api'

import { Paper } from '../components/Paper/Paper'
import { Textbox } from '../components/Textbox/Textbox'
import { Button } from '../components/Button/Button'

import Dashboard from './Dashboard'

export class Register extends Component {
  static contextType = AppContext
  context!: React.ContextType<typeof AppContext>

  registrationService = new APIService()

  state = {
    showLogin: false,
    loggedIn: false,
    user: {
      _id: String(),
      name: String(),
      email: String(),
      createdOn: String()
    },
    data: {
      regName: undefined,
      regEmail: undefined,
      loginEmail: undefined,
      loginPw: undefined
    },
    requiredFulfilled: false,
    fieldsValidated: false,
    required: [
      'regName', 'regEmail'
    ],
    iterableMembers: []
  }

  handleChangeById = (event: any) => {
    const result = inputHandler(event, this.state)
    this.setState((prevState, props) => (
      result
    ))
  }

  register = async () => {
    let user = await this.registrationService.registerUser({
      name: this.state.data.regName,
      email: this.state.data.regEmail
    })
    
    this.setState({
      user: {
        _id: user.data._id,
        name: user.data.name,
        email: user.data.email,
        createdOn: user.data.createdOn
      }
    })
    return
  }

  login = async () => {
    /**
     * @todo
     * Login user with email and passcode, which
     * will be generated by the backend and sent
     * in the confirmation email to the user.
     * 
     * After login, return user to AppContext
     */

    // this.context.actions.setUser(user.data)
    this.context.actions.endAppTransition()
    return
  }

  render() {
    if(this.state.loggedIn)
      return (
        <AppContext.Consumer>
          {
            ({ state }) => (
              <Dashboard intent="register" user={this.state.user} />
            )
          }
        </AppContext.Consumer>
      )
    else
      return (
        <article className="register">
          <h1>Register</h1>

          <section>
            <h3>Registrations Open</h3>

            <p>
              If you're a student currently studying at JMI, you can register by filling out the form provided at the link below.
              The last date of registration for JMI students is October 05.
            </p>

            <section>
              {
                this.state.showLogin ? (
                  <div style={{ display: 'flex', flexDirection: 'column', alignContent: 'center' }}>
                    <Textbox id="loginEmail" className="dark" placeholder="Email"
                      onChange={this.handleChangeById}
                      validationErrorHelptext="Not a valid email address"
                      validation={(e: any) => {
                        return emailValidation(e.target.value)
                      }}
                      onValidate={() => {
                        this.setState({
                          fieldsValidated: true
                        })
                      }}
                    />

                    <Textbox id="loginPw" className="dark" placeholder="Passcode"
                      type="password" onChange={this.handleChangeById}/>

                    <AppContext.Consumer>
                      {
                        appContext => (
                          <div style={{ display: 'flex', flexDirection: 'row', maxWidth: '24em', margin: '2em auto' }}>
                            <Route render={({ history })=>{
                              return (
                                <Button color="secondary"
                                  onClick={() => {
                                    appContext.actions.startAppTransition()
                                    this.login().then(() => {
                                      history.push('/dashboard')
                                    })
                                  }}
                                >
                                  Login
                                </Button>
                              )
                            }}/>
                          </div>
                        )
                      }
                    </AppContext.Consumer>
                    
                    <div style={{ padding: "2em" }}>
                      Don't have an account? <Link to="#" onClick={() => {
                        this.setState({
                          showLogin: false
                        })
                      }}>Register</Link>
                    </div>
                  </div>
                ) : (
                  <div style={{ display: 'flex', flexDirection: 'column', alignContent: 'center' }}>
                    <Textbox id="regName" className="dark" placeholder="Name" onChange={this.handleChangeById} />

                    <Textbox id="regEmail" className="dark" placeholder="Email"
                      onChange={this.handleChangeById}
                      validationErrorHelptext="Not a valid email address"
                      validation={(e: any) => {
                        return emailValidation(e.target.value)
                      }}
                      onValidate={() => {
                        this.setState({
                          fieldsValidated: true
                        })
                      }}
                    />

                    <AppContext.Consumer>
                      {
                        appContext => (
                          <div style={{ display: 'flex', flexDirection: 'row', maxWidth: '24em', margin: '2em auto' }}>                                  
                            <Button color="primary"
                              onClick={() => {
                                this.register().then(() => {
                                  this.setState({
                                    loggedIn: true
                                  })
                                })                                    
                              }}
                            >
                              Start
                            </Button>
                          </div>
                        )
                      }
                    </AppContext.Consumer>
                    
                    <div style={{ padding: "2em" }}>
                      Already Registered? <Link to="#" onClick={() => {
                        this.setState({
                          showLogin: true
                        })
                      }}>Login</Link>
                    </div>
                  </div>
                )
              }
            </section>
          </section>
        </article>
      )
  }
}
export default Register
